{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","show","this","setState","Container","fluid","Row","style","color","backgroundColor","paddingTop","Col","md","Dropdown","Toggle","carian","Menu","Item","href","Figure","Image","width","height","alt","src","Caption","Breadcrumb","active","Carousel","className","ListGroup","Jumbotron","Button","variant","roundedCircle","Form","Group","Control","type","placeholder","Check","label","onClick","handleModal","Modal","onHide","Header","closeButton","Title","Body","Footer","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9e862f7f.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nimport { Container, Row, Col,\n  Button, Breadcrumb,\n  Carousel,\n  Dropdown,\n  Form,\n  Image, Figure,\n  Jumbotron, ListGroup, Modal\n  }  from \"react-bootstrap\"\n\n\n\nclass App extends React.Component{\n  constructor()\n    {\n      super()\n      this.state={\n        show: false\n      }\n    }\n    handleModal(){\n      this.setState({show:!this.state.show})\n    }\n\n\nrender(){\n  return (\n\n    <div>\n    <Container fluid>\n        <Row style={{color: 'white', backgroundColor: 'black', paddingTop:'5px'}}>\n            <Col md={\"auto\"}>\n                  <Dropdown>\n                      <Dropdown.Toggle carian = \"success\">\n                      Pilih Bahasa\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        <Dropdown.Item href= \"/\">Indonesia</Dropdown.Item>\n                        <Dropdown.Item href= \"/\">Inggris</Dropdown.Item>\n                      </Dropdown.Menu>\n                  </Dropdown>\n            </Col>\n            <Col></Col>\n            <Col md={2}>\n                      <Figure>\n                          <Figure.Image width={50} height={60} alt=\"Nasi Padang\" src=\"https://png.pngtree.com/svg/20161113/ef1b24279e.png\" />\n                          <Figure.Caption>\n                              <h6 style={{color: 'white'}}>Alan Saputra</h6>\n                          </Figure.Caption>\n                      </Figure>\n            </Col>\n        </Row>\n\n        <Row>\n            <Col></Col>\n            <Col></Col>\n            <Col md={4}>\n                <Breadcrumb>\n                    <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n                    <Breadcrumb.Item href=\"/\">Berita</Breadcrumb.Item>\n                    <Breadcrumb.Item active>Bola</Breadcrumb.Item>\n                </Breadcrumb>\n            </Col>\n        </Row>\n\n\n        <Row>\n            <Col  md={2}></Col>\n\n            <Col>\n                  <Carousel>\n                        <Carousel.Item>\n                              <img\n                                className=\"d-block w-100\"\n                                src=\"https://images.performgroup.com/di/library/GOAL/63/7f/sani-rizki-fauzi-indonesia-u-22_4yztc4nehkt61fa7omuyagf71.jpg?t=351764441&quality=60&w=1600\"\n                                alt=\"First slide\"\n                              />\n                              <Carousel.Caption>\n                                <h5>Sani Riszki Fuazi Tegaskan Mental Pemain Timnas Indonesia U-23 tetap Bagus</h5>\n                              </Carousel.Caption>\n                        </Carousel.Item>\n\n                        <Carousel.Item>\n                              <img\n                                className=\"d-block w-100\"\n                                src=\"https://images.performgroup.com/di/library/GOAL/30/f0/neymar-psg-paris-saint-germain-2018-19_gmakk5891n9c19udcwofmrsgc.jpg?t=-1258742791&quality=60&w=1600\"\n                                alt=\"First slide\"\n                              />\n                              <Carousel.Caption>\n                                <h5>Neymar Bahas Kontrak Baru Di Paris Saint-Germain</h5>\n                              </Carousel.Caption>\n                        </Carousel.Item>\n\n                        <Carousel.Item>\n                              <img\n                                className=\"d-block w-100\"\n                                src=\"https://images.performgroup.com/di/library/GOAL/f3/33/england-celebrate-vs-montenegro_e97kv5anpqlq1gr9nc2qaz4ko.jpg?t=-1232521935&quality=60&w=1600\"\n                                alt=\"First slide\"\n                              />\n                              <Carousel.Caption>\n                                <h5>Inggris Mau Jadi Tim Terbaik Di Dunia</h5>\n                              </Carousel.Caption>\n                        </Carousel.Item>\n                    </Carousel>\n                  </Col>\n                  <Col md={2}></Col>\n              </Row>\n                    <br />\n\n              <Row>\n\n                    <Col md={3}>\n                        <ListGroup>\n                          <ListGroup.Item active>Liga 1 Indonesia</ListGroup.Item>\n                          <ListGroup.Item>Liga Primer Inggris</ListGroup.Item>\n                          <ListGroup.Item>Divisi Primera</ListGroup.Item>\n                          <ListGroup.Item>Serie A</ListGroup.Item>\n                          <ListGroup.Item>Ligue 1</ListGroup.Item>\n                          <ListGroup.Item>Bundes Liga</ListGroup.Item>\n                        </ListGroup>\n                    </Col>\n\n                    <Col>\n                        <Jumbotron>\n                            <h1>DIVISI PRIMERA</h1>\n                            <p>Main Untuk Catalunya, Gerard Pique Minta Dihormati</p>\n                            <Button variant=\"primary\">Read More</Button>\n                        </Jumbotron>\n\n\n                    </Col>\n\n                    <Col md={3}>\n                          <center><Image src=\"https://www.pngkey.com/png/full/367-3670351_access-login-icon.png\" style={{ width: '5rem' }}  roundedCircle  /></center>\n                          <br />\n\n                          <Form>\n\n                          <Form.Group>\n                          <Form.Control type=\"email\" placeholder=\"Masukan Email\" />\n                          </Form.Group>\n\n                          <Form.Group>\n                          <Form.Control type=\"password\" placeholder=\"Password\" />\n                          </Form.Group>\n\n                          <Form.Group>\n                          <Form.Check type=\"checkbox\" label=\"Term & Condition\" />\n                          </Form.Group>\n\n                          <div>\n                              <Button onClick={()=>{this.handleModal()}}>Login</Button>\n                              <Modal show={this.state.show} onHide={()=>this.handleModal()}>\n                                <Modal.Header closeButton>\n                                  <Modal.Title>Login</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body>\n                                  <p>Anda Berhasil Login</p>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                  <Button onClick={()=>{this.handleModal()}} variant=\"secondary\">Close</Button>\n                                  <Button onClick={()=>{this.handleModal()}} variant=\"primary\">Save Username & Password</Button>\n                                </Modal.Footer>\n                              </Modal>\n                          </div>\n                          </Form>\n                    </Col>\n              </Row>\n    </Container>\n\n    </div>\n\n  );\n }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}